buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.3'
    }
}

apply plugin: 'kotlinx-serialization'
apply plugin: 'com.jfrog.bintray'

dependencies {

    // kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlin_serialization_version"

    // config
    implementation "com.typesafe:config:$typesafe_config_version"

    // test
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.3.0'
}

description = "Typesafe Config (HOCON) mapper for Kotlin data object"
def githubUrl = "https://github.com/uharaqo/kotlin-hocon-mapper"

publishing {
    publications {
        bintray(MavenPublication) {
            from components.java
            artifact javadocJar
            artifact dokkaJar
            artifact sourcesJar

            pom.withXml {
                def root = asNode()
                root.appendNode("packaging", "jar")

                root.dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }

                root.appendNode('name', project.name)
                root.appendNode('description', project.description)
                root.appendNode('url', githubUrl)

                def license = root.appendNode("licenses").appendNode("license")
                license.appendNode("name", "The Apache Software License, Version 2.0")
                license.appendNode("url", "http://www.apache.org/licenses/LICENSE-2.0.txt")
                license.appendNode("distribution", "repo")

                def developer = root.appendNode("developers").appendNode("developer")
                developer.appendNode("id", "uharaqo")
                developer.appendNode("name", "uharaqo")
                developer.appendNode("email", "uharaqo+maven@gmail.com")

                def scm = root.appendNode("scm")
                scm.appendNode("connection", "scm:git:${githubUrl}.git")
                scm.appendNode("developerConnection", "scm:git:${githubUrl}.git")
                scm.appendNode("url", "${githubUrl}/tree/master")
            }
        }
    }
}

bintray {
    user = project.hasProperty("bintray_user") ? bintray_user : System.getenv("BINTRAY_USER")
    key = project.hasProperty("bintray_key") ? bintray_key : System.getenv("BINTRAY_KEY")
    publications = ["bintray"]

    pkg {
        repo = "maven"
        name = "${rootProject.group}.${project.name}"
        licenses = ["Apache-2.0"]

        desc =
        vcsUrl = "${githubUrl}.git"
        issueTrackerUrl = "${githubUrl}/issues"
        labels = ['kotlin', 'hocon', 'config', 'typesafe', 'kotlinx.serialization']
        version {
            name = project.version
        }
    }
}
